<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App with PyScript</title>
    <link rel="stylesheet" href="style.css">
    <script defer src="https://pyscript.net/latest/pyscript.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300..800;1,300..800&display=swap" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h2 id="title">Weather App</h2>
        <div class="texts">
            <input type="text" id="city" placeholder="Search">
            <button id="weather_button">Search</button><br><br><br>
        </div>
        <h3 id="weather_result">Search</h3>
    </div>

<py-script>
    from pyodide.http import pyfetch
    from js import document
    from pyodide.ffi import create_proxy
    import asyncio

    async def get_weather(city):
        api_key = "942dd98dc0208f33a49c831c13548e6d"
        url = f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric&lang=kr"

        try:
            response = await pyfetch(url, method="GET")
            if response.ok:
                data = await response.json()
                temp = data["main"]["temp"]
                description = data["weather"][0]["description"]
                city_name = data["name"]
                return f"{city_name} : {temp}°C"
            elif response.status == 404:
                return "Invalid City"
            else:
                return "날씨 정보를 가져올 수 없습니다. 다시 시도하세요."
        except Exception as e:
            return f"error: {str(e)}"

    async def fetch_weather(event):
        city = document.getElementById("city").value
        if city:
            result = await get_weather(city)
            document.getElementById("weather_result").innerText = result
        else:
            document.getElementById("weather_result").innerText = "Enter the City"

    proxy = create_proxy(fetch_weather)
    document.getElementById("weather_button").addEventListener("click", proxy)
</py-script>

</body>
</html>
